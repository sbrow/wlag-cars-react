{"version":3,"sources":["views/outlook/components/OutlookFolder.js"],"names":["OutlookFolder","currentFolder","this","props","match","params","folder","dispatch","outlookFetchFolder","prevProps","prevState","snapshot","message","clearBody","body","replace","teaserMaxLength","subject","length","substring","attachments","tooltipId","_id","tooltipLabel","map","_","name","join","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","placement","overlay","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","id","className","labels","home","color","work","label","idx","key","_this2","messages","classNames","classnames","unread","read","type","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","contact","getMessageLabels","getTeaser","getAttachmentsTooltip","_common_utils_components__WEBPACK_IMPORTED_MODULE_10__","date","format","React","Component","connect","state","outlook"],"mappings":"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","file":"static/js/18.cab91611.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport classnames from \"classnames\";\n\nimport { Moment } from \"../../../common/utils/components\";\n\nimport { connect } from \"react-redux\";\nimport { outlookFetchFolder } from \"../OutlookActions\";\n\nclass OutlookFolder extends React.Component {\n  currentFolder = null;\n\n  componentDidMount() {\n    if (this.currentFolder !== this.props.match.params.folder) {\n      this.props.dispatch(outlookFetchFolder(this.props.match.params.folder));\n      this.currentFolder = this.props.match.params.folder;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params.folder !== this.props.match.params.folder) {\n      this.props.dispatch(outlookFetchFolder(this.props.match.params.folder));\n      this.currentFolder = this.props.match.params.folder;\n    }\n  }\n\n  getTeaser(message) {\n    const clearBody = message.body\n      .replace(/<[^<>]+?>/gm, \" \")\n      .replace(/(\\s{2}|\\n)/gm, \" \");\n\n    const teaserMaxLength = 55 - message.subject.length;\n\n    return clearBody.length > teaserMaxLength\n      ? clearBody.substring(0, teaserMaxLength) + \"...\"\n      : clearBody;\n  }\n\n  getAttachmentsTooltip(message) {\n    if (message.attachments && message.attachments.length) {\n      const tooltipId = \"message-\" + message._id + \"-attachments-tooltip\";\n      const tooltipLabel =\n        \"FILES: \" + message.attachments.map(_ => _.name).join(\", \");\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          overlay={<Tooltip id={tooltipId}>{tooltipLabel}</Tooltip>}\n        >\n          <span className=\"txt-color-darken\">\n            <i className=\"fa fa-paperclip fa-lg\" />\n          </span>\n        </OverlayTrigger>\n      );\n    } else {\n      return \"\";\n    }\n  }\n\n  getMessageLabels(message) {\n    let labels = {\n      home: {\n        name: \"HOME\",\n        color: \"teal\"\n      },\n      work: {\n        name: \"WORK\",\n        color: \"orange\"\n      }\n    };\n\n    return message.labels\n      ? message.labels.map((label, idx) => {\n          return (\n            <span\n              key={message._id + idx}\n              className={\"label bg-color-\" + labels[label].color}\n            >\n              {labels[label].name}\n            </span>\n          );\n        })\n      : \"\";\n  }\n\n  render() {\n    return (\n      <div className=\"table-wrap custom-scroll\">\n        <table id=\"inbox-table\" className=\"table table-striped table-hover\">\n          <tbody>\n            {this.props.messages.map(message => {\n              let classNames = classnames({\n                unread: !message.read\n              });\n              return message.folder === this.props.match.params.folder ? (\n                <tr key={message._id} id=\"msg1\" className={classNames}>\n                  <td className=\"inbox-table-icon\">\n                    <div className=\"checkbox\">\n                      <label>\n                        <input type=\"checkbox\" className=\"checkbox style-2\" />\n                        <span />\n                      </label>\n                    </div>\n                  </td>\n                  <td className=\"inbox-data-from hidden-xs hidden-sm\">\n                    <Link to={\"/outlook/detail/\" + message._id}>\n                      <div>{message.contact.name}</div>\n                    </Link>\n                  </td>\n                  <td className=\"inbox-data-message\">\n                    <Link to={\"/outlook/detail/\" + message._id}>\n                      <div>\n                        <span>\n                          {this.getMessageLabels(message)}\n                          {message.subject}\n                        </span>\n                        {this.getTeaser(message)}\n                      </div>\n                    </Link>\n                  </td>\n                  <td className=\"inbox-data-attachment hidden-xs\">\n                    <Link to={\"/outlook/detail/\" + message._id}>\n                      {this.getAttachmentsTooltip(message)}\n                    </Link>\n                  </td>\n                  <td className=\"inbox-data-date hidden-xs\">\n                    <Moment date={message.date} format=\"h:mm a\" />\n                  </td>\n                </tr>\n              ) : null;\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state.outlook)(OutlookFolder);\n"],"sourceRoot":""}